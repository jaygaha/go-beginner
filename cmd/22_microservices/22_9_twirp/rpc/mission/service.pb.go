// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: service.proto

package mission

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlanMissionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlanetName    string                 `protobuf:"bytes,1,opt,name=planet_name,json=planetName,proto3" json:"planet_name,omitempty"` // required
	Spacecraft    string                 `protobuf:"bytes,2,opt,name=spacecraft,proto3" json:"spacecraft,omitempty"`                   // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanMissionRequest) Reset() {
	*x = PlanMissionRequest{}
	mi := &file_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanMissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanMissionRequest) ProtoMessage() {}

func (x *PlanMissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanMissionRequest.ProtoReflect.Descriptor instead.
func (*PlanMissionRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *PlanMissionRequest) GetPlanetName() string {
	if x != nil {
		return x.PlanetName
	}
	return ""
}

func (x *PlanMissionRequest) GetSpacecraft() string {
	if x != nil {
		return x.Spacecraft
	}
	return ""
}

type PlanMissionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MissionId      string                 `protobuf:"bytes,1,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`
	PlanetName     string                 `protobuf:"bytes,2,opt,name=planet_name,json=planetName,proto3" json:"planet_name,omitempty"`
	Spacecraft     string                 `protobuf:"bytes,3,opt,name=spacecraft,proto3" json:"spacecraft,omitempty"`
	LaunchDate     string                 `protobuf:"bytes,4,opt,name=launch_date,json=launchDate,proto3" json:"launch_date,omitempty"` // ISO 8601 format
	TravelTimeDays int64                  `protobuf:"varint,5,opt,name=travel_time_days,json=travelTimeDays,proto3" json:"travel_time_days,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PlanMissionResponse) Reset() {
	*x = PlanMissionResponse{}
	mi := &file_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanMissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanMissionResponse) ProtoMessage() {}

func (x *PlanMissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanMissionResponse.ProtoReflect.Descriptor instead.
func (*PlanMissionResponse) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *PlanMissionResponse) GetMissionId() string {
	if x != nil {
		return x.MissionId
	}
	return ""
}

func (x *PlanMissionResponse) GetPlanetName() string {
	if x != nil {
		return x.PlanetName
	}
	return ""
}

func (x *PlanMissionResponse) GetSpacecraft() string {
	if x != nil {
		return x.Spacecraft
	}
	return ""
}

func (x *PlanMissionResponse) GetLaunchDate() string {
	if x != nil {
		return x.LaunchDate
	}
	return ""
}

func (x *PlanMissionResponse) GetTravelTimeDays() int64 {
	if x != nil {
		return x.TravelTimeDays
	}
	return 0
}

var File_service_proto protoreflect.FileDescriptor

const file_service_proto_rawDesc = "" +
	"\n" +
	"\rservice.proto\x12\amission\"U\n" +
	"\x12PlanMissionRequest\x12\x1f\n" +
	"\vplanet_name\x18\x01 \x01(\tR\n" +
	"planetName\x12\x1e\n" +
	"\n" +
	"spacecraft\x18\x02 \x01(\tR\n" +
	"spacecraft\"\xc0\x01\n" +
	"\x13PlanMissionResponse\x12\x1d\n" +
	"\n" +
	"mission_id\x18\x01 \x01(\tR\tmissionId\x12\x1f\n" +
	"\vplanet_name\x18\x02 \x01(\tR\n" +
	"planetName\x12\x1e\n" +
	"\n" +
	"spacecraft\x18\x03 \x01(\tR\n" +
	"spacecraft\x12\x1f\n" +
	"\vlaunch_date\x18\x04 \x01(\tR\n" +
	"launchDate\x12(\n" +
	"\x10travel_time_days\x18\x05 \x01(\x03R\x0etravelTimeDays2Z\n" +
	"\x0eMissionService\x12H\n" +
	"\vPlanMission\x12\x1b.mission.PlanMissionRequest\x1a\x1c.mission.PlanMissionResponseBLZJgithub.com/jaygaha/go-beginner/cmd/22_microservices/22_9_twirp/rpc/missionb\x06proto3"

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData []byte
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)))
	})
	return file_service_proto_rawDescData
}

var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_service_proto_goTypes = []any{
	(*PlanMissionRequest)(nil),  // 0: mission.PlanMissionRequest
	(*PlanMissionResponse)(nil), // 1: mission.PlanMissionResponse
}
var file_service_proto_depIdxs = []int32{
	0, // 0: mission.MissionService.PlanMission:input_type -> mission.PlanMissionRequest
	1, // 1: mission.MissionService.PlanMission:output_type -> mission.PlanMissionResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_service_proto_rawDesc), len(file_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
